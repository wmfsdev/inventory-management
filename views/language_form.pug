extends layout

block scripts 
  script(type="text/javascript").
    window.addEventListener('DOMContentLoaded', function() {
      const addFramework = document.getElementById('play').addEventListener('click', async () => {
          const input = document.querySelector('#framework')
          const frameworks = document.querySelector('.framework-list')
          
          if (input.value) {
            let frameworkInput = document.createElement('input')
      
            frameworkInput.setAttribute("name", "frameworkvalues")
            frameworkInput.setAttribute("readonly", "readonly")
            frameworkInput.value = input.value
            frameworks.append(frameworkInput)
          } else return 

        });
      }, false);

block content

  h1=title

  form(method='POST' enctype='multipart/form-data')
    div.form-group
      label(for='name') Name:
      input#name(type='text' name='name' value=(undefined===language ? '' : language.title) )
      label(for='type_system')= "Type system: (select multiple types using Ctrl+click)"
      select#type_system(type='text' name='type_system' multiple size=7)
        optgroup(label= "General")
          each item, i in ["Strong", "Weak"]
            if (!language)
              option(value= item) !{item}
            else if (language.typeSystem.includes(item))
              option(value= item selected) !{item}
            else
              option(value= item) !{item}
        optgroup(label= "Major")
          each item in ["Static", "Dynamic", "Manifest", "Inferred", "Nominal", "Structural", "Duck typing"]
            if (!language)
              option(value= item) !{item}
            else if (language.typeSystem.includes(item))
              option(value= item selected) !{item}
            else
              option(value= item) !{item}
        optgroup(label= "Minor")
          each item in ["Abstract", "Dependent", "Flow-sensitive", "Gradual", "Intersection", "Latent", "Refinement", "Substructural", "Unique", "Session"]
            if (!language)
              option(value= item) !{item}
            else if (language.typeSystem.includes(item))
              option(value= item selected) !{item}
            else
              option(value= item) !{item}
      label(for='version') Version:
      input#version(type='string', name='version' value=(undefined===language ? '' : language.version) )
      label(for='release_date') Release Date:
      input#release_date(type='date', name='release_date' value=(undefined===language ? '' : language.released_yyyy_mm_dd) )
      label(for='description') Description:
      textarea#description(rows="5" name='description')= undefined===language ? '' : language.desc
      label(for='framework') Framework: 
      input#framework(type='string' name='framework')
      div.framework-list
        if (!language)
        else
          each item in language.framework
            input(type='input' value= item.title readonly="readonly")
          p To update/delete any of the listed frameworks visit the dedicated page for the framework in question
      button(type='button' id='play' onclick=addFramework) Add
      input(type='file' name='upload')
      if (language === undefined || language.image === null   )
        input(type='hidden' name='no_image')
      else
        img(src=`${image}`)
        input(type='hidden' name='image_id' value=`${language.image._id}` )
      button.btn.btn-primary(type='submit') Submit

  if errors
    ul
      for error in errors
        li!= error.msg